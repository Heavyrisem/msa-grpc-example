// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "hero/test.proto" (package "test", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TestService } from "./test";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Person } from "./test";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service test.TestService
 */
export interface ITestServiceClient {
    /**
     * @generated from protobuf rpc: FindOne(test.Person) returns (test.Person);
     */
    findOne(input: Person, options?: RpcOptions): UnaryCall<Person, Person>;
}
/**
 * @generated from protobuf service test.TestService
 */
export class TestServiceClient implements ITestServiceClient, ServiceInfo {
    typeName = TestService.typeName;
    methods = TestService.methods;
    options = TestService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FindOne(test.Person) returns (test.Person);
     */
    findOne(input: Person, options?: RpcOptions): UnaryCall<Person, Person> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Person, Person>("unary", this._transport, method, opt, input);
    }
}
